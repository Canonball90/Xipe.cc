package xipe.module.modules.exploit;

import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.item.Items;
import net.minecraft.network.packet.c2s.play.HandSwingC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.util.Hand;
import net.minecraft.util.hit.BlockHitResult;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Direction;
import net.minecraft.util.math.Vec3d;
import xipe.module.Mod;
import xipe.module.settings.ModeSetting;
import xipe.module.settings.NumberSetting;
import xipe.utils.player.InventoryUtils;
import xipe.utils.world.FindItemResult;

public class SelfFill extends Mod{
	
	NumberSetting rubberband = new NumberSetting("Slider", 0, 7, 3, 1);
	ModeSetting mode = new ModeSetting("Mode", "Strict", "Strict", "Bypass");
	ModeSetting block = new ModeSetting("Block", "Anvil", "Anvil", "Obs", "EChest");

	public SelfFill() {
		super("SelfFill", "Module for testing", Category.EXPLOIT);
		addSettings(rubberband,mode,block);
	}
	
	  private FindItemResult result;


	    @Override
	    public void onTick() {
	        BlockPos blockPos = mc.player.getBlockPos();
	        if(block.isMode("Anvil")) {
	        	result = InventoryUtils.findInHotbar(Items.ANVIL);
	        }
	        if(block.isMode("Obs")) {
	        	result = InventoryUtils.findInHotbar(Items.OBSIDIAN);
	        }
	        if(block.isMode("EChest")) {
	        	result = InventoryUtils.findInHotbar(Items.ENDER_CHEST);
	        }
	        mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() + 0.4, mc.player.getZ(), false));
	        mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() + 0.75, mc.player.getZ(), false));
	        mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() + 1.01, mc.player.getZ(), false));
	        mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() + 1.15, mc.player.getZ(), false));

	        InventoryUtils.swap(result.getSlot(), true);
	        doPlace(mc.player, Hand.MAIN_HAND, blockPos);
	        InventoryUtils.swapBack();

	        if (mode.isMode("Strict")) {
	        	mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY() + rubberband.getValue(), mc.player.getZ(), false));
	        }else if(mode.isMode("Bypass")) {
	        	mc.player.updatePosition(mc.player.getX(), mc.player.getY() + rubberband.getValue(), mc.player.getZ());
	        }
	        //cheks
	        if (!mc.world.getBlockState(mc.player.getBlockPos()).getMaterial().isReplaceable()) {
	           // info("Already burrowed, disabling...");
	            toggle();
	            return;
	        }
	        toggle();
	    }

	    public void doPlace(PlayerEntity player, Hand hand, BlockPos blockPos) {
	        mc.interactionManager.interactBlock(mc.player, Hand.MAIN_HAND, new BlockHitResult(new Vec3d(blockPos.getX(), blockPos.getY(), blockPos.getZ()), Direction.UP, blockPos, false));
	        mc.player.networkHandler.sendPacket(new HandSwingC2SPacket(Hand.MAIN_HAND));
	    }

}
