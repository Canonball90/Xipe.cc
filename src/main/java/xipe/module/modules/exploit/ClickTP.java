package xipe.module.modules.exploit;

import net.minecraft.util.math.Box;
import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.client.network.ClientPlayerEntity;
import net.minecraft.network.Packet;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.util.math.Direction;
import net.minecraft.util.math.Vec3i;
import xipe.module.Mod;
import xipe.module.settings.ModeSetting;
import xipe.utils.render.QuadColor;
import xipe.utils.render.RenderUtils;
import net.minecraft.util.hit.BlockHitResult;
import net.minecraft.util.math.Vec3d;
import net.minecraft.util.math.BlockPos;
import net.minecraft.client.MinecraftClient;

public class ClickTP extends Mod
{
    public static MinecraftClient mc;
    private static BlockPos targeted;
    public static ModeSetting mode;
    
    public ClickTP() {
        super("ClickTP", "Tries to TP you to the targeted location", Category.EXPLOIT);
        this.addSettings(ClickTP.mode);
    }
    
    private static int lengthTo(final BlockPos p) {
        final Vec3d v = new Vec3d((double)p.getX(), (double)p.getY(), (double)p.getZ());
        return (int)roundToN(v.distanceTo(ClickTP.mc.player.getPos()), 0);
    }
    
    public static double roundToN(final double x, final int n) {
        if (n == 0) {
            return Math.floor(x);
        }
        final double factor = Math.pow(10.0, n);
        return Math.round(x * factor) / factor;
    }
    
    public static void clickTPaction() {
        final BlockHitResult ray = (BlockHitResult)ClickTP.mc.player.raycast(200.0, ClickTP.mc.getTickDelta(), true);
        ClickTP.targeted = new BlockPos((Vec3i)ray.getBlockPos());
        if (ClickTP.mc.currentScreen != null) {
            return;
        }
        final BlockHitResult ray2 = (BlockHitResult)ClickTP.mc.player.raycast(200.0, ClickTP.mc.getTickDelta(), true);
        final int rd = lengthTo(ray2.getBlockPos());
        final int raycastdistance = rd / 7;
        final BlockHitResult blockHitResult = (BlockHitResult)ClickTP.mc.player.raycast(200.0, ClickTP.mc.getTickDelta(), true);
        final BlockPos d = new BlockPos((Vec3i)blockHitResult.getBlockPos());
        BlockPos dest = new BlockPos(d.getX() + 0.5, (double)d.getY(), d.getZ() + 0.5);
        dest = dest.offset(Direction.UP, 1);
        if (ClickTP.mode.getMode().equalsIgnoreCase("Normal") && ClickTP.mc.player != null) {
            ClickTP.mc.player.updatePosition(dest.getX() + 0.5, (double)dest.getY(), dest.getZ() + 0.5);
        }
        if (ClickTP.mode.getMode().equalsIgnoreCase("Split") && ClickTP.mc.player != null) {
            ClickTP.mc.player.jump();
            final ClientPlayerEntity player = ClickTP.mc.player;
            final Vec3d playerpos = player.getPos();
            final double xn = dest.getX() - playerpos.x;
            final double yn = dest.getY() - playerpos.y;
            final double zn = dest.getZ() - playerpos.z;
            final double x = xn / raycastdistance;
            final double y = yn / raycastdistance;
            final double z = zn / raycastdistance;
            for (int i = 0; i < raycastdistance; ++i) {
                ClickTP.mc.player.networkHandler.sendPacket((Packet)new PlayerMoveC2SPacket.PositionAndOnGround(player.getX() + x, player.getY() + y, player.getZ() + z, true));
            }
            player.updatePosition(dest.getX() + 0.5, (double)dest.getY(), dest.getZ() + 0.5);
        }
    }
    
    @Override
    public void onWorldRender(final MatrixStack matrices) {
        final BlockHitResult blockHitResult = (BlockHitResult)ClickTP.mc.player.raycast(200.0, ClickTP.mc.getTickDelta(), true);
        final BlockPos d = new BlockPos((Vec3i)blockHitResult.getBlockPos());
        final BlockPos dest = new BlockPos(d.getX() + 0.5, (double)d.getY(), d.getZ() + 0.5);
        RenderUtils.drawBoxFill(new Box(Vec3d.of((Vec3i)dest), Vec3d.of((Vec3i)dest).add(1.0, 0.0, 1.0)).stretch(0.0, 1.0, 0.0), QuadColor.single(0.0f, 100.0f, 99.0f, 0.5f), new Direction[0]);
        super.onWorldRender(matrices);
    }
    
    static {
        ClickTP.mc = MinecraftClient.getInstance();
        ClickTP.targeted = new BlockPos(0, 0, 0);
        ClickTP.mode = new ModeSetting("Mode", "Normal", new String[] { "Normal", "Split" });
    }
}

